<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">


	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/resources/log4j/log4j.properties</param-value>
	</context-param>
	<!-- 配置Spring配置文件的位置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/resources/spring/applicationContext.xml</param-value>
	</context-param>
	<!-- log4j Listener -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	
	
	<!-- Open Session In View Filter -->
	
	<filter>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
		<param-name>flushMode</param-name>
		<param-value>AUTO</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Spring Listener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>   
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>   
	</listener>
	
	<!-- Character Encoding Filter -->
	<filter>
        <filter-name>Set Character Encoding</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <!-- 强制进行转码 -->
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>Set Character Encoding</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
	<filter>
		<filter-name>antiSqlAttacksFilter</filter-name>
		<filter-class>com.pemng.serviceSystem.base.interceptor.AntiSqlAttacksFilter</filter-class>
		<init-param>
			<param-name>sqlDefinedKeys</param-name>
			<param-value>(select\s+)|(update\s+)|(insert\s+)|(delete\s+)|(drop\s+)|(mid\s+)|(char\s+)|(script\s+)</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>antiSqlAttacksFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
		
	<filter>
		<filter-name>XSS</filter-name>
		<filter-class>com.pemng.serviceSystem.base.interceptor.CrossScriptingFilter</filter-class>
		<init-param>
			<param-name>excludeActions</param-name>
			<param-value></param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>XSS</filter-name>
		<url-pattern>*.actionhtmlx</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>
				struts-default.xml,struts-plugin.xml,resources/struts/struts.xml
			</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<!-- The Welcome File List -->
	<welcome-file-list>
		<welcome-file>jsp/homepage.jsp</welcome-file>
	</welcome-file-list>
	
	<servlet>
		<servlet-name>AuthImg</servlet-name>		
		<servlet-class>com.pemng.common.servlet.AuthImg</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>AuthImg</servlet-name>
		<url-pattern>/AuthImg.servlet</url-pattern>
	</servlet-mapping>
	
  <!-- 
  <listener>
	<listener-class>
		com.pemng.serviceSystem.common.listener.AppContextListener
	</listener-class>
  </listener>
  
  <listener>
	<listener-class>
		com.pemng.serviceSystem.common.listener.SessionEventListener
	</listener-class>
  </listener>
  <session-config>
  	<session-timeout>30</session-timeout>
  </session-config>
 -->
  
  	<servlet>
		<servlet-name>ConnectorServlet</servlet-name>
		<servlet-class>
			net.fckeditor.connector.ConnectorServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConnectorServlet</servlet-name>
		<url-pattern>/fckeditor/editor/filemanager/connectors/*</url-pattern>
	</servlet-mapping>
  
</web-app>